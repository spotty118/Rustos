version: "3.8"

# Optimized Docker Compose for macOS Development
# This configuration addresses common macOS Docker issues

services:
  # Main development environment - optimized for macOS
  rustos-dev:
    build:
      context: .
      dockerfile: Dockerfile.macos
    image: rustos:macos-latest
    container_name: rustos-macos-dev
    platform: linux/amd64  # Force x86_64 for consistency
    volumes:
      # Mount source code - use delegated for better performance on macOS
      - .:/home/rustdev/rustos:delegated
      # Use named volumes for caches to improve performance
      - cargo-cache-macos:/home/rustdev/.cargo/registry
      - cargo-git-macos:/home/rustdev/.cargo/git
      - build-cache-macos:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - CARGO_INCREMENTAL=1
      - RUSTFLAGS=-C target-cpu=native
    working_dir: /home/rustdev/rustos
    tty: true
    stdin_open: true
    # Allocate more memory for builds
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: ["check-env"]
    profiles: ["dev"]

  # Interactive shell - optimized for development workflow
  rustos-shell:
    build:
      context: .
      dockerfile: Dockerfile.macos
    image: rustos:macos-latest
    container_name: rustos-macos-shell
    platform: linux/amd64
    volumes:
      - .:/home/rustdev/rustos:delegated
      - cargo-cache-macos:/home/rustdev/.cargo/registry
      - cargo-git-macos:/home/rustdev/.cargo/git
      - build-cache-macos:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - CARGO_INCREMENTAL=1
      - RUSTFLAGS=-C target-cpu=native
      - PS1='\[\033[01;32m\][RustOS]\[\033[00m\] \[\033[01;34m\]\w\[\033[00m\] \$ '
    working_dir: /home/rustdev/rustos
    tty: true
    stdin_open: true
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: ["/bin/bash"]
    profiles: ["shell"]

  # Build-only service for CI or quick builds
  rustos-build:
    build:
      context: .
      dockerfile: Dockerfile.macos
    image: rustos:macos-latest
    container_name: rustos-macos-build
    platform: linux/amd64
    volumes:
      - .:/home/rustdev/rustos:ro  # Read-only for safety
      - build-artifacts-macos:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - CARGO_INCREMENTAL=1
    working_dir: /home/rustdev/rustos
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: ["build-kernel"]
    profiles: ["build"]

  # Test runner service
  rustos-test:
    build:
      context: .
      dockerfile: Dockerfile.macos
    image: rustos:macos-latest
    container_name: rustos-macos-test
    platform: linux/amd64
    volumes:
      - .:/home/rustdev/rustos:delegated
      - cargo-cache-macos:/home/rustdev/.cargo/registry
      - cargo-git-macos:/home/rustdev/.cargo/git
      - build-cache-macos:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - CARGO_INCREMENTAL=1
    working_dir: /home/rustdev/rustos
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: ["test-kernel"]
    profiles: ["test"]

  # QEMU runner - headless mode optimized for macOS Docker
  rustos-qemu:
    build:
      context: .
      dockerfile: Dockerfile.macos
    image: rustos:macos-latest
    container_name: rustos-macos-qemu
    platform: linux/amd64
    volumes:
      - .:/home/rustdev/rustos:delegated
      - build-cache-macos:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
    working_dir: /home/rustdev/rustos
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    # No GUI support for compatibility
    command: ["run-qemu"]
    profiles: ["qemu"]

  # Complete development pipeline
  rustos-pipeline:
    build:
      context: .
      dockerfile: Dockerfile.macos
    image: rustos:macos-latest
    container_name: rustos-macos-pipeline
    platform: linux/amd64
    volumes:
      - .:/home/rustdev/rustos:delegated
      - cargo-cache-macos:/home/rustdev/.cargo/registry
      - cargo-git-macos:/home/rustdev/.cargo/git
      - build-cache-macos:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - CARGO_INCREMENTAL=1
    working_dir: /home/rustdev/rustos
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    command: |
      bash -c "
        echo 'ðŸš€ RustOS Development Pipeline for macOS'
        echo '======================================='
        echo ''
        echo '1. Checking environment...'
        check-env
        echo ''
        echo '2. Building kernel...'
        build-kernel
        echo ''
        echo '3. Running tests...'
        test-kernel || echo 'Some tests may fail in container environment'
        echo ''
        echo '4. Creating bootimage...'
        create-bootimage
        echo ''
        echo 'âœ… Pipeline completed successfully!'
        echo ''
        echo 'Available commands:'
        echo '  docker-compose -f docker-compose.macos.yml --profile shell up rustos-shell'
        echo '  docker-compose -f docker-compose.macos.yml --profile qemu up rustos-qemu'
      "
    profiles: ["pipeline"]

# Named volumes for better performance on macOS
volumes:
  cargo-cache-macos:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /tmp/rustos-cargo-cache
  cargo-git-macos:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /tmp/rustos-cargo-git
  build-cache-macos:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /tmp/rustos-build-cache
  build-artifacts-macos:
    driver: local

networks:
  default:
    name: rustos-macos-network
    driver: bridge