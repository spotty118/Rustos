version: "3.8"

services:
  # Main RustOS development environment
  rustos-dev:
    build:
      context: .
      dockerfile: Dockerfile
    image: rustos:latest
    container_name: rustos-kernel-dev
    volumes:
      # Mount source code for development
      - .:/home/rustdev/rustos
      # Preserve cargo cache between runs
      - cargo-cache:/home/rustdev/.cargo/registry
      - cargo-git:/home/rustdev/.cargo/git
      # Preserve build artifacts
      - build-cache:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - DISPLAY=${DISPLAY:-:0}
      - QT_X11_NO_MITSHM=1
    working_dir: /home/rustdev/rustos
    # Keep container running for interactive development
    tty: true
    stdin_open: true
    # X11 forwarding support
    # Default command runs the full test pipeline
    command: ["./full_test.sh"]
    profiles: ["dev", "test"]

  # Build-only service for CI/CD
  rustos-build:
    build:
      context: .
      dockerfile: Dockerfile
    image: rustos:latest
    container_name: rustos-kernel-build
    volumes:
      - .:/home/rustdev/rustos:ro # Read-only mount
      - build-artifacts:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - DISPLAY=${DISPLAY:-:0}
    working_dir: /home/rustdev/rustos
    command: ["./build_kernel.sh"]
    profiles: ["build"]

  # Interactive development shell
  rustos-shell:
    build:
      context: .
      dockerfile: Dockerfile
    image: rustos:latest
    container_name: rustos-kernel-shell
    volumes:
      - .:/home/rustdev/rustos
      - cargo-cache:/home/rustdev/.cargo/registry
      - cargo-git:/home/rustdev/.cargo/git
      - build-cache:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - DISPLAY=${DISPLAY:-:0}
      - QT_X11_NO_MITSHM=1
      - GUI_MODE=1
    working_dir: /home/rustdev/rustos
    tty: true
    stdin_open: true
    # X11 forwarding support
    command: ["/bin/bash"]
    profiles: ["shell"]

  # QEMU testing service
  rustos-qemu:
    build:
      context: .
      dockerfile: Dockerfile
    image: rustos:latest
    container_name: rustos-kernel-qemu
    volumes:
      - .:/home/rustdev/rustos
      - build-cache:/home/rustdev/rustos/target
    environment:
      - RUST_BACKTRACE=1
      - RUST_TARGET_PATH=/home/rustdev/rustos
      - DISPLAY=${DISPLAY:-:0}
    working_dir: /home/rustdev/rustos
    # Enable GUI applications if X11 is available
    network_mode: host
    # Allow access to display and audio devices
    devices:
      - "/dev/dri:/dev/dri"
    # Security options for GUI
    security_opt:
      - seccomp:unconfined
    command: ["./run_qemu.sh"]
    profiles: ["qemu"]

volumes:
  cargo-cache:
    driver: local
  cargo-git:
    driver: local
  build-cache:
    driver: local
  build-artifacts:
    driver: local

networks:
  default:
    name: rustos-network
