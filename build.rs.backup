use std::process::Command;

fn main() {
    // Assemble boot.s using GNU assembler (gas)
    let output = Command::new("as")
        .args(&["--32", "src/boot.s", "-o", "boot.o"])
        .output()
        .expect("Failed to run GNU assembler (as)");

    if !output.status.success() {
        panic!("Failed to assemble boot.s: {}", String::from_utf8_lossy(&output.stderr));
    }

    println!("cargo:rustc-link-arg=boot.o");
    println!("cargo:rustc-link-arg=-Tlink.ld");
    println!("cargo:rerun-if-changed=src/boot.s");
    println!("cargo:rerun-if-changed=link.ld");
}
